[project]
name = "dewdl"
version = "0.2.4"
description = "Request and data manager for interfacing with the UDL"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [{ name = "Brandon Sexton", email = "bsexton@icr-team.com" }]
dependencies = [
  "appdirs",
  "httpx",
  "requests",
  "pydantic",
  "python-json-logger"]

[project.optional-dependencies]
dev = [
  "commitizen",
  "flake8",
  "flake8-pytest-style",
  "pre-commit",
  "ruff",
  "dewdl[test]"
]

test = [
  "pytest",
  "pytest-cov",
  "mockito"
]

build = [
  "wheel",
  "build"
]

docs = [
  "sphinx",
  "sphinx-autodoc-typehints",
  "sphinx-markdown-builder"
]

deploy = ["twine"]

[project.scripts]
dewdl = "dewdl._cli._cli_main:run"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "dewdl/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "dewdl/*",
]

[tool.hatch.build.targets.wheel]
packages = ["dewdl"]

[tool.coverage.paths]
source = ["dewdl", "*/site-packages"]

[tool.ruff]
# See https://docs.astral.sh/ruff/rules/
exclude = ["^tests/", "__init__.py"]
line-length = 120

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    "E",  # Error
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q",  # flake8-quotes
    "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
]
ignore = [
    "FIX001",   # line-contains-fixme
    "FIX002",   # line-contains-todo
    "G004",     # logging-f-string
    "PLR0913",  # too-many-arguments
    "PLR0914",  # too-many-locals
    "PLR0917",  # too-many-positional-arguments
    "B905",  # zip strict=True; remove once python <3.10 support is dropped.
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D401",
    "E402",
    "E501",
    "F401",
    "TRY003",
    "S101",
]
# 3. Avoid trying to fix flake8-bugbear (`B`) violations.
# unfixable = ["B"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# 4. Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
#[tool.ruff.lint.per-file-ignores]
#"__init__.py" = ["E402"]
#"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 15.
max-complexity = 15

[tool.pytest.ini_options]
pythonpath = ["."]
addopts = [
  "--cov=dewdl",
  "--cov-report=term-missing",
  "--cov-report=xml",
  "--cov-branch",
  "--import-mode=importlib",
]

[tool.coverage.run]
omit = ["tests/*", "__init__.py"]
