image: python:3.11

variables:
  PIP_CACHE_DIR: "/cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - /cache/pip

stages:
- ci-test
- auto-bump
- build
- publish

before_script:
  - source scripts/setup_python_environment.sh -b -d -y -t

.ci-test: &ci-test
  stage: ci-test
  variables:
    PYTHONPATH: "${CI_PROJECT_DIR}/venv/lib/python3.11/site-packages:${PYTHONPATH}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
      when: always

ruff:
  extends: .ci-test
  script:
    - ruff check .

pytest:
  extends: .ci-test
  script:
    - pytest --cov=process_pipeline --cov-report term --cov-report=xml --cov-report=html --junitxml=junit.xml tests/unit
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: always
    paths:
      - htmlcov/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: junit.xml
    expire_in: 1 week

auto-bump:
  stage: auto-bump
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")' 
  script:
    - git config user.email $CI_EMAIL && git config user.name $CI_USERNAME
    - git remote rm origin || true # Use '|| true' to avoid failure if the remote doesn't exist
    - git remote add origin https://oauth2:$PROJECT_ACCESS_TOKEN@gitlab.corp.icr-team.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
    - git fetch --tags
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
    - cz bump --yes
    - git push --follow-tags origin $CI_COMMIT_BRANCH:$CI_COMMIT_BRANCH

build:
  stage: build
  dependencies:
    - auto-bump
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      when: on_success
  script:
    - git fetch origin "$CI_COMMIT_BRANCH"
    - git checkout origin/"$CI_COMMIT_BRANCH"
    - rm -rf dist/ build/
    - python -m venv venv
    - python -m build --sdist --wheel
  artifacts:
    paths:
      - dist/

publish:
  stage: publish
  dependencies:
    - build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      when: on_success
  script:
    - twine upload -u ${ICR_NEXUS_USER} -p ${ICR_NEXUS_PASSWORD} --cert ${ERUDITION_ROOT_CA} --repository-url "${ICR_PYINDEX}/" dist/*.whl dist/*.tar.gz


